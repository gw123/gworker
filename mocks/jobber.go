// Code generated by mockery v1.0.0
package mocks

import context "context"

import mock "github.com/stretchr/testify/mock"

// Jobber is an autogenerated mock type for the Jobber type
type Jobber struct {
	mock.Mock
}

// Attempt provides a mock function with given fields:
func (_m *Jobber) Attempt() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Body provides a mock function with given fields:
func (_m *Jobber) Body() []byte {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// OK provides a mock function with given fields:
func (_m *Jobber) OK() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Retry provides a mock function with given fields: ctx, delay
func (_m *Jobber) Retry(ctx context.Context, delay int) error {
	ret := _m.Called(ctx, delay)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int) error); ok {
		r0 = rf(ctx, delay)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Skip provides a mock function with given fields:
func (_m *Jobber) Skip() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
